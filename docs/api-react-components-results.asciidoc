[[api-react-components-results]]
= Results

// :description: Search UI React Results Component
// :keywords: demo

Displays all search results.

[discrete]
[[api-react-components-results-example]]
== Example

[source,jsx]
----

import { Results } from "@elastic/react-search-ui";

...

<Results titleField="title" urlField="nps_link" />
----

[discrete]
[[api-react-components-results-configuring-search-queries]]
== Configuring search queries

Certain aspects of search results can be configured in `SearchProvider`, using the `searchQuery` configuration, such as
term highlighting and search fields. See the <<api-core-configuration-search-query-queryconfig,Search Query Configuration>> guide
for more information.

[discrete]
[[api-react-components-results-properties]]
== Properties

|===
| Name| Description

| className
|

| titleField
| Name of field to use as the title from each result.

| shouldTrackClickThrough
| Whether or not to track a clickthrough event when clicked.

| clickThroughTags
| Tags to send to analytics API when tracking clickthrough.

| urlField
| Name of field to use as the href from each result.

| thumbnailField
| Name of field to use for thumbnail image. Should be a valid URL and at least 220px wide.

| resultView
| See <<api-react-components-result-view-customization,Result component customization.>>

| view
| Used to override the default view for this Component. See <<api-react-components-results-view-customization,View customization>> below.

| *
| Any other property passed will be passed through and available to use in a Custom View
|===

[discrete]
[[api-react-components-results-view-customization]]
== View customization

A complete guide to view customization can be found in the <<guides-customizing-styles-and-html-customizing-html,Customization: Component views and HTML>> section.

This component accepts two view props: `view` and `resultView`. The `resultView` allows you to customize the individual result items that are displayed. The `view` prop allows you to customize that wrapper around those results, which by default is simply a `ul` element.

A separate guide specifically for customizing the Result component can be found <<api-react-components-result-view-customization,here.>>, which can be used for providing a `resultView` prop.

The following properties are available in the view:

|===
| Name| Description

| className
| Passed through from main component

| children
|
|===

See https://github.com/elastic/search-ui/blob/main/packages/react-search-ui-views/src/Results.tsx[Results.tsx] for an example.
